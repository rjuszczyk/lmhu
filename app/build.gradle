import com.android.build.gradle.internal.dsl.SigningConfig

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

static SigningConfig getFromFile(File keystorePropertiesFile) throws FileNotFoundException {

    if(!keystorePropertiesFile.exists()) {
       return error(new FileNotFoundException("No keystore properties for this build variant, file " + keystorePropertiesFile.absolutePath + " not found."))
    }

    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    def storeName = keystoreProperties['storeName']
    def keyAlias = keystoreProperties['keyAlias']
    def keyPassword = keystoreProperties['keyPassword']
    def storeFile = new File(keystorePropertiesFile.parentFile, keystoreProperties['storeFile'])
    if(!storeFile.exists()) {
        return error(new FileNotFoundException(storeFile.absolutePath  + " specified in "+keystorePropertiesFile.absolutePath+ " does not exists"))
    }
    def storePassword = keystoreProperties['storePassword']

    SigningConfig result = new SigningConfig(storeName)

    result.setStoreFile(storeFile)
    result.setStorePassword(storePassword)
    result.setKeyAlias(keyAlias)
    result.setKeyPassword(keyPassword)

    return result
}

static SigningConfig error(Exception exception) {
    return new SigningConfig("error") {
        @Override
        File getStoreFile() {
            throw exception
        }

        @Override
        boolean isSigningReady() {
            return true
        }
    }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "eu.letmehelpu.android"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "0.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        disable 'DuplicatePlatformClasses'
    }

    File keystoreDir = rootProject.file("keystore")
    buildTypes {
        release {
            signingConfig getFromFile(new File(keystoreDir, "keystore-release.properties"))
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig getFromFile(new File(keystoreDir, "keystore-debug.properties"))
            debuggable true
        }
        dev {
            initWith debug
            signingConfig getFromFile(new File(keystoreDir, "keystore-dev.properties"))
            applicationIdSuffix ".dev"
        }
    }
}



dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation ('com.facebook.android:facebook-login:4.31.0') {
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'customtabs'
    }
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support:customtabs:27.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    // Dependency for Google Sign-In
    implementation 'com.google.android.gms:play-services-auth:11.8.0'

    // Dependencies for the REST API example
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.api-client:google-api-client-android:1.23.0'
    implementation 'com.google.apis:google-api-services-people:v1-rev237-1.23.0'


    testImplementation 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.15.0'
    androidTestCompile 'org.mockito:mockito-android:2.7.22'

    // UiAutomatorTesting
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestImplementation 'com.android.support:support-annotations:27.1.0'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    compile 'com.squareup.retrofit2:converter-gson:2.4.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
}
